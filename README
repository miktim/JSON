# Java JSON parser/generator, MIT (c) 2020-2021 miktim@mail.ru

Release notes:
  - Java SE 7+, Android compatible;
  - in accordance with RFC 8259: https://datatracker.ietf.org/doc/rfc8259/?include_text=1
  - parser converts JSON text to Java objects:
      JSON object, String, Number (BigDecimal), Boolean, null, Object[] array of listed types;
  - JSON object members (name/value pairs) are stored in order of appearance/creation;
  - when the names within an object are not unique, parser stores the last value only;
  - JSON object setter accepts any Java object, all Java primitives and primitive arrays;
  - avoid recursion!;
  - in addition to the parsed types, the generator converts Java Lists,Sets to JSON arrays
    and Java Maps to JSON objects. The null key is converted to a "null" member name.
    Other Java objects are converted to JSON strings.

package org.miktim

Overview:

  Class JSON extends LinkedHashMap<String, Object>.
    Constructor:
      JSON();

    Methods:
      static Object parse(String json) throws IOException, ParseException;
      static Object parse(Reader reader) throws IOException, ParseException;
      static String stringify(Object object); // generate JSON text

      String toString();   // stringify object
      JSON clone();        // clones only the member list
      List<String> list(); // list of member names
      boolean exists(String memberName);
      Object get(String memberName);
      JSON set(String memberName, Object value);
      Object remove(String memberName);

Usage example see in https://github.com/miktim/JSON/blob/master/test/json/JSONTest.java
